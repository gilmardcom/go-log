name: Go Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        go-version: [1.21, 1.22]
        os: [ubuntu-latest, windows-latest, macos-latest]
        # exclude:
        #   - os: windows-latest
        #     go-version: 1.18
      fail-fast: false # Continue running all combinations even if one fails

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Install dependencies
        run: go mod tidy

      - name: Build the code
        run: go build ./...

      - name: Run tests
        run: go test ./... -v

      - name: Upload test results
        if: always() # Always upload artifacts even if the tests fail
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.os }}-go-${{ matrix.go-version }}
          path: test-results/

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20 # Use the latest stable version for linting

      - name: Install GolangCI-Lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.51.2

      - name: Run linting
        run: golangci-lint run ./...

  # build-docker:
  #   if: github.event_name == 'push'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Build Docker image
  #       run: |
  #         docker build -t my-go-app:${{ github.sha }} .

  #     - name: Push Docker image
  #       if: github.ref == 'refs/heads/main'
  #       run: |
  #         docker tag my-go-app:${{ github.sha }} my-docker-repo/my-go-app:latest
  #         docker push my-docker-repo/my-go-app:latest